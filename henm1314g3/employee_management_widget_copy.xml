<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    
    <ModulePrefs title="Business Employees"
		description="Manage your employees and assign learning goals to them."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		height="400">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"                     
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/" 
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">
			
		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>
    
    <Content type="html">
    <![CDATA[
		
		<!-- We use jQuery to manipulate DOM and Bootstrap for the interface. -->
    	<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/bootstrap.min.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/bootstrap-slider.js"></script>
		<script src="http://dbis.rwth-aachen.de/gadgets/iwc/lib/iwc.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/spin.min.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/ladda.min.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/Ractive.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/bootbox.min.js"></script>
						
		<!-- Managers for BCN and Employee related stuff -->
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/boostShared.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/BCNManager.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/EmployeeManager.js"></script>


		<!-- Define CSS -->
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/slider.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/ladda-themeless.min.css">

		<!-- JavaScript Block -->
		<script>
			
			var space;
			var employeeList;
			var bcnList;
			var iwcClient;

			//Define the ractives as globals
			var ractiveOverview;
			var ractiveEditEmployee;
			var ractiveAddEmployee;
			var ractiveDeleteEmployee;
			var ractiveSetLIEmployee;
			
			gadgets.util.registerOnLoadHandler(init);
			
			function init(){
				space = new openapp.oo.Resource(openapp.param.space());

				iwcClient = new iwc.Client();
				iwcClient.connect(iwcCallback);
			}

			function iwcCallback(intent){
				if((intent.action == "BCN_CREATE") || (intent.action == "BCN_UPDATE")){
					$('#setLIModal').modal("hide");

					var message = "<div>Please wait while the employees are updated to reflect these changes.</div>"
					message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";
					bootbox.dialog({
						title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
						message : message,
						closeButton : false
					});
					createBCNfromUri(intent.data, function(bcn){
						if(intent.action == "BCN_CREATE"){
							//Add the new BCN to the local list
							bcnList.push(bcn);
						}
						else{
							//Replace the BCN in the local list with the update one
							for(var i = 0; i < bcnList.length; i++){
								if(bcn.uri == bcnList[i].uri)
									bcnList[i] = bcn;
							}
							ractiveOverview.update();
						}
						sortBcns(bcnList);

						//Update all local employee objects
						for(var i = 0; i < employeeList.length; i++){
							ensureEmplyoeeBCNConsistency(employeeList[i], [bcn], []);
						}
						bootbox.hideAll();
					});
				}

				if(intent.action == "BCN_DELETE"){
					$('#setLIModal').modal("hide");
					var message = "<div>Please wait while the employees are updated to reflect these changes.</div>"
					message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";
					bootbox.dialog({
						title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Goals have changed.",
						message : message,
						closeButton : false
					});

					//Find the deleted BCN in the list via its URI and remove it
					var bcnToRemove = null;
					for(var i = 0; i < bcnList.length; i++){
						if(bcnList[i].uri == intent.data){
							bcnToRemove = bcnList[i];
							bcnList.splice(i, 1);
						}
					}

					//Remove BCN data from the employees
					for(var i = 0; i < employeeList.length; i++){
						ensureEmplyoeeBCNConsistency(employeeList[i], [], [bcnToRemove]);
					}

					bootbox.hideAll();
				}
			}

			function publishEmployeeCreated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_CREATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeUpdated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_UPDATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeDeleted(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_DELETE"
				};

				iwcClient.publish(intent);
			}

			function publishShowEmployeeProgress(uri){
				var intent = {
					component: "",
					data: uri,
					dataType: "text/json",
					action: "SHOW_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			function publishShowOverallEmployeeProgress(){
				var intent = {
					component: "",
					data: "",
					dataType: "text/json",
					action: "SHOW_OVERALL_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			$(function(){
				//question Icon 
				$('#question').click(function(){
					$('#descriptionModal').modal({
						keyboard: true
					});
				});

				$("#showOverallProgressButton").click(function(){
					publishShowOverallEmployeeProgress();
				});

				var showOverallGraphTooltipOptions = {};
				showOverallGraphTooltipOptions.title = "Show the overall progress for all your employees.";
				showOverallGraphTooltipOptions.placement = "left";
				$("#showOverallProgressButton").tooltip(showOverallGraphTooltipOptions);
				
				var newEmployeeTooltipOptions = {};
				newEmployeeTooltipOptions.title = "Add a new employee for your company.";
				newEmployeeTooltipOptions.placement = "right";
				$("#addNewEmployeeButton").tooltip(newEmployeeTooltipOptions);

				var message = "<div>Please wait.</div>"
				message = message + "<div><center><img style='margin-left:5px;' id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'></center></div>";
				// bootbox.dialog({
				// 	title : "<span style='margin-right:5px;' class='glyphicon glyphicon-refresh'></span>Loading employees.",
				// 	message : message,
				// 	closeButton : false
				// });
				retrieveAllEmployees(space, function(employees){
					employeeList = employees;
					sortEmployees();
					retrieveAllBcns(space, function(bcns){
						bcnList = bcns;
						sortBcns(bcnList);

						$("#addNewEmployeeButton").click(function(){
							var employee = new Employee({});
							ractiveAddEmployee.set("employee", employee);
							ractiveAddEmployee.set("nameError", false);
							ractiveAddEmployee.set("emailError", false);
							$("#addEmployeeModal").modal();
						});

						// Overview ractive which is responsible to render the overview list of all employees
						ractiveOverview = new Ractive({
						    el: 'containerEmployeeOverview',
						    template: '#templateEmployeeOverview',
						    data: { "employeeList" : employeeList},
						    append: true
						});

						ractiveOverview.on("edit", function ( event ) {
							//We are editing a cloned employee object
							//If the user discards the changes we do not have to do anything.
							//If the user saves the changes we just replace the original employee with the clone
							ractiveEditEmployee.set("employee", event.context.clone());
							ractiveEditEmployee.set("originalEmployee", event.context);
							ractiveEditEmployee.set("nameError", false);
							ractiveEditEmployee.set("emailError", false);
							$('#updateEmployeeModal').modal();
						});

						ractiveOverview.on("delete", function ( event ) {
							ractiveDeleteEmployee.set("employee", event.context);
							$('#deleteEmployeeModal').modal();
						});

						ractiveOverview.on("graph", function(event){
							publishShowEmployeeProgress(event.context.uri);
						});

						ractiveOverview.on( 'setLI', function ( event ) {
							//We are editing a cloned employee object
							//If the user discards the changes we do not have to do anything.
							//If the user saves the changes we just replace the original employee with the clone
							var clone = event.context.clone();
							bindEmployeeToBCNs(clone);
							ractiveSetLIEmployee.set("bcnList", bcnList);
							ractiveSetLIEmployee.set("employee", clone);
							ractiveSetLIEmployee.set("originalEmployee", event.context);
							$('#setLIModal').modal();
						});

						//Edit employee ractive which is responsible to render the modal to edit an employee
						ractiveEditEmployee = new Ractive({
							el: 'containerEmployeeEdit',
						    template: '#employeeTemplate',
						    data: { "employee" : null,
						    		"originalEmployee" : null,
						    		"nameError" : false,
						    		"emailError" : false
						    	  },
						    append: true
						});

						ractiveEditEmployee.on("saveEmployee", function (event) {
							var employee = this.get("employee");
							if(!checkInputEmployee(employee, this))
								return;
							var originalEmployee = this.get("originalEmployee");
							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.update(function(){
								publishEmployeeUpdated(employee.uri);
								//Replace the old employee in the array with the modified one
								employeeList[employeeList.indexOf(originalEmployee)] = employee;

								//Tell the overview ractive that the employee was updated
								ractiveOverview.update();

								sortEmployees();

								//Hide the loading indicator of the save button
								l.stop();
								$("#updateEmployeeModal").modal("hide");
							});

						});

						//Add employee ractive which is responsible to render the modal to add a new employee
						ractiveAddEmployee = new Ractive({
							el: 'containerEmployeeAdd',
						    template: '#employeeTemplate',
						    data: { "employee" : null,
						    		"nameError" : false,
						    		"emailError" : false
						    	  },
						    append: true
						});

						ractiveAddEmployee.on("saveEmployee", function (event) {
							var employee = this.get("employee");
							if(!checkInputEmployee(employee, this))
								return;

							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							ensureEmplyoeeBCNConsistency(employee, bcnList, []);
							employee.create(function(){
								employeeList.push(employee);
								sortEmployees();

								publishEmployeeCreated(employee.uri);
								//Hide the loading indicator of the save button
								l.stop();
								$("#addEmployeeModal").modal("hide");
							});
						});

						//Delete employee ractive which is responsible to render the modal used to delete an employee
						ractiveDeleteEmployee = new Ractive({
							el: 'containerEmployeeDelete',
						    template: '#deleteEmployeeTemplate',
						  	data: {
						  		employee : null
						  	},
						    append: true
						});

						ractiveDeleteEmployee.on("deleteEmployee", function(event){
							var employee = this.get("employee");
							var buttonElement = event.node;
							//Show the loading indicator of the delete button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.delete(function(){
								employeeList.splice(employeeList.indexOf(employee), 1);
								//TODO: Sort the array by employee name

								publishEmployeeDeleted(employee.uri);
								//Hide the loading indicator of the delete button
								l.stop();
								$("#deleteEmployeeModal").modal("hide");
							});
						});

						//Ractive which is responsible to render the modal where the user can set the learning levels
						//for an employee
						ractiveSetLIEmployee = new Ractive({
							el: 'containerEmployeeSetLI',
						    template: '#setLITemplate',
						    data: 	{ 	"bcnList" : null, 
										"learningLevels" : llevel,
										"employee" : null,
										"originalEmployee" : null
								 	},
			
						    append: true
						});

						ractiveSetLIEmployee.on("saveSetLI", function(event){
							var employee = this.get("employee");
							var originalEmployee = this.get("originalEmployee");
							var buttonElement = event.node;
							//Show the loading indicator of the save button
							var l = Ladda.create(buttonElement);
							l.start();
							employee.update(function(){
								publishEmployeeUpdated(employee.uri);

								//Replace the old employee in the array with the modified one
								employeeList[employeeList.indexOf(originalEmployee)] = employee;

								//Tell the overview ractive that the employee was updated
								ractiveOverview.update();

								//Hide the loading indicator of the save button
								l.stop();
								$('#setLIModal').modal("hide");
							});
						});

						//bootbox.hideAll();
					});
				});

			});

			function bindEmployeeToBCNs(employee){
				for(var i=0; i < bcnList.length; i++){
					var bcn = bcnList[i];
					bcn.employeeBcnData = employee.learningLevels[bcn.uri];
					for(var j = 0; j < bcn.learningIndicators.length; j++){
						var li = bcn.learningIndicators[j];
						li.employeeLiData = employee.learningLevels[bcn.uri][li.id];
					}
				}
			}

			function sortEmployees(){
				employeeList.sort(function (a, b){
					if(a.name.toLowerCase() < b.name.toLowerCase()) 
						return -1; else return 1;
				});
			}

			function clearEmployeeInputWarning(){
				// clear all warning messages					
				$("#inputNewEmployeeName").parent().removeClass("has-error");
				$("#inputNewEmployeeEmail").parent().removeClass("has-error");
				$("#employeeNameInputWarning").text("");
				$("#employeeEmailInputWarning").text("");
			}

			function clearUpdateInputWarning(){
				// clear all warning messages					
				$("#inputUpdateEmployeeName").parent().removeClass("has-error");
				$("#inputUpdateEmployeeEmail").parent().removeClass("has-error");
				$("#inputUpdateEmployeeNameWarning").text("");
				$("#inputUpdateEmployeeEmailWarning").text("");
			}

			function checkInputEmployee(employee, ractive)
			{
				var nameError = (employee.name == "");
				ractive.set("nameError", nameError);

				var emailError = false;
				var email = employee.email;	

				var atpos = email.indexOf("@");
				var dotpos = email.lastIndexOf(".");

				if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
  				{
  					emailError = true;
  				}

  				ractive.set("emailError", emailError);

  				return !(nameError || emailError);
			}

			function checkInputUpdateEmployee()
			{
				var name = $("#inputUpdateEmployeeName").val();
				var email = $("#inputUpdateEmployeeEmail").val();	

				if (name == null || name == "") // empty name
  				{				
					$("#inputUpdateEmployeeName").parent().addClass("has-error");					
					$("#inputUpdateEmployeeNameWarning").text("Error: Name must be filled out!");
  	  				return false;
   				}

				var atpos = email.indexOf("@");
				var dotpos = email.lastIndexOf(".");

				if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
  				{
  					if (email == null || email == "") // empty email
					{
						$("#inputUpdateEmployeeEmail").parent().addClass("has-error");						
						$("#inputUpdateEmployeeEmailWarning").text("Error: Email must be filled out!");
						return false;
					}
					$("#inputUpdateEmployeeEmail").parent().addClass("has-error");
  					$("#inputUpdateEmployeeEmailWarning").text("\"" + email + "\"" +" is not a valid e-mail address");
  					return false;
  				} 
 				return true;
			}

		</script>

		<!-- HTML Block -->
		
		<div style="overflow-y: scroll; height:400px;">
		<div class="panel panel-primary" id="containerEmployeeOverview">
			
			<div class="panel-heading">
					<button id="question" type="button" class="btn btn-default launch-modal" style="float:right; margin:-5 5 10 5px; color:#428BCA;"><span  class="glyphicon glyphicon-question-sign"></span></button>
					<h3 class="panel-title">
					<span class="glyphicon glyphicon-user" style="margin-right:5px;"></span>Business employees
				</h3>
		  	</div>
		  	
			<div id='panel' class="panel-body">
				<button type="button" class="btn btn-primary" id="addNewEmployeeButton"><span class="glyphicon glyphicon-plus"></span></button>
				<button type="button" class="btn btn-primary pull-right" id="showOverallProgressButton"><span class="glyphicon glyphicon-stats"></span></button>
			</div>
			
		</div>
		</div>

		<script id="templateEmployeeOverview" type='text/ractive'>
			<table class="table table-striped table-bordered table-condensed" >
			    <tbody>
					{{#employeeList}}
						<tr> 
							<td>
								{{name}}
							</td>
							<td style='width:215px;' align='center'>
								<div class='btn-group'>
									<button class='btn btn-default' on-click='edit'><span class='glyphicon glyphicon-edit'></span></button>
									<button class='btn btn-default' on-click='delete'><span class='glyphicon glyphicon-trash'></span></button>
									<button class='btn btn-default' on-click='setLI'><span class='glyphicon glyphicon-flag'></span></button>
									<a class='btn btn-default mail-employee-btn' href='mailto:{{email}}'><span class='glyphicon glyphicon-envelope'></span></a>
									<button class='btn btn-default' on-click='graph'><span class='glyphicon glyphicon-stats'></span></button>
								</div>
							</td>
						</tr>
					{{/employeeList}}
			    </tbody>
			</table>
		</script>


		<script id="employeeTemplate" type="text/ractive">
			<div class="modal-body">
				<form role="form">
					<div class="form-group {{ nameError ? "has-error" : "" }}">
						<label for="inputNewEmployeeName" class="control-label">Name</label>
						<input value='{{employee.name}}' type="text" class="form-control" id="inputNewEmployeeName" placeholder="Enter name">
						{{#nameError}}
						<span class="help-block"><h6>Name must not be empty.</h6></span>
						{{/nameError}}
					</div>
					<div class="form-group {{ emailError ? "has-error" : "" }}">
						<label for="inputNewEmployeeEmail" class="control-label">Email</label>
						<input value='{{employee.email}}' type="text" class="form-control" id="inputNewEmployeeEmail" placeholder="Enter email">
						{{#emailError}}
						<span class="help-block"><h6>Please enter a valid email adress.</h6></span>
						{{/emailError}}
					</div>
				</form>
			</div>

			<div class="modal-footer">
	        	<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        	<button class="btn btn-primary ladda-button" data-style="zoom-out" on-click="saveEmployee"><span class="ladda-label">Save</span></button>
			</div>
  		</script>
				



		<div class="modal fade" id="updateEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeEdit">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">View/Update Employee</h4>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="addEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeAdd">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">Add new Employee</h4>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="setLIModal" tabindex="-1" role="dialog" aria-labelledby="setLIModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content" id="containerEmployeeSetLI">
				</div>
			</div>
		</div>

<script id="setLITemplate" type="text/ractive">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
			<h4  class="modal-title" id='massageEmployeeSetLI'>{{employee.name}}</h4>
		</div>
		<div class="modal-body">
		<div class="panel-group" id="bcnPanel">
		{{#bcnList:num}}
			<div class="panel panel-default">
				<div class="panel-heading" style="padding-bottom:1px;">
	      			<h4 class="panel-title">
	        			<span class="glyphicon glyphicon-star" style="margin-right:5px;"></span> 
	        			<a data-toggle="collapse" data-parent="#bcnPanel" href="#bcn{{num}}"> {{name}}
	        				<span class="caret"></span>
	        			</a> 
	      			</h4>
	      			<div class="checkbox" style="margin-bottom:1px; margin-top:1px;"> 
						<label> 
						 	Relevant 
					 	<input type="checkbox" value="" checked='{{employeeBcnData.isRelevant}}'> 
						</label> 
					</div>
	    		</div> 				
	    		<div  id="bcn{{num}}" class="panel-collapse collapse"> 
	      			<ul style="margin-bottom:0px;" class="list-group">
		      			{{#learningIndicators}}
							<li class="list-group-item">
								<h4><span class="glyphicon glyphicon-flag" style="margin-right:5px;"></span> {{name}}</h4>
								<div class="checkbox">
		  							<label>
		  								Relevant
		    							<input type="checkbox" value="" checked="{{employeeLiData.isRelevant}}">
		  					        </label>
						        </div> 
								Start level:
								<select class="form-control" value="{{employeeLiData.start}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
								Current level:
								<select class="form-control" value="{{employeeLiData.current}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
								End level:
								<select class="form-control" value="{{employeeLiData.end}}">
								{{#learningLevels}}
									<option value='{{.}}'>{{.}}</option>
								{{/learningLevels}}		
								</select>
						   	</li>
						{{/learningIndicators}}
					</ul>
	    		</div>
	  		</div>
					
	{{/bcnList}}		

		</div>
	</div>
	<div class="modal-footer">
	    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		<button class="btn btn-primary ladda-button" data-style="zoom-out"  on-click="saveSetLI"><span class="ladda-label">Save</span></button>  					
	</div>
 
</script>

<script id="deleteEmployeeTemplate" type="text/ractive">
	<div class="modal-body">
		<div class="alert alert-danger fade in" id="alertInModal">
			<h4>Do you really want to delete {{employee.name}} as an employee?</h4>
		</div>
		<div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
			<button class="btn btn-danger ladda-button" data-style="zoom-out" on-click="deleteEmployee"><span class="ladda-label">Delete</span></button>				       
		</div>
	</div>
</script>

<div class="modal fade" id="deleteEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content" id="containerEmployeeDelete">
		</div>
	</div>
</div>






	<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    		<h4 class="modal-title">Business Employees Help</h4>
            </div>
          <div class="modal-body">
            <div class="panel-group" id="levelsdef" align="justify">
             <ul style="padding: 10px;">
			 <li>To add new business employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/add.PNG" alt="add" width="30" height="20"> icon. In the new view enter <i>Name</i>, <i>Email</i> for your employee. Click on the <i>Save</i> button to save the changes.</li>
             <li>To see overall progress of all goals click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/overall.PNG" alt="overall" width="30" height="20"> icon. The graph will be shown in the <i>Learning Progress</i> widget.</p></li>
             <li>To edit employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/edite.PNG" alt="edite" width="30" height="20"> icon.</li>
             <li>To delete employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/delete.PNG" alt="delete" width="30" height="20"> icon.</li>
             <li>To assign goals to employee and define learning levels click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/flag.PNG" alt="assign" width="30" height="20"> icon. 
              In the new view check in relevant goals for this employee and define learning levels by clicking on the goal name and selecting start, current and end level accordingly. 
              <br>The description of learning level as follows: 
              	<ul style="padding: 10px;">
                	<li><b>Level 0:</b> I have not started to address the skills / knowledge required for this indicator.</li> 
               	  	<li><b>Level 1:</b> I have started to try to address the skills / knowledge for this indicator but need more time / support to make progress.</li>
                	<li><b>Level 2:</b> I feel that I have acquired some skills / knowledge and am aware of the progress I have made with regards to this indicator but feel that I need to learn more before I can put into practice on the job.</li>
                	<li><b>Level 3:</b> I feel that I have acquired significant skills / knowledge for my current job role and have started   to put into practice on the job.</li>
                	<li><b>Level 4:</b> I feel that I have acquired significant knowledge of these skills for my current job role but for future development within the company, I recognise that I can develop further.</li>
               		<li><b>Level 5:</b> I feel confident enough in using these skills and knowledge so that I could support a few colleagues with regard to these?</li>
              	</ul>
              </li>
             <li>To monitor the learning progress of employee straight forward in <i>Learning Progress</i> widget click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/chart.PNG" alt="chart" width="30" height="20"> icon.</li>
             </ul>	
          </div>
          <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>          
          </div>      
        </div>      
      </div>
    </div>
	]]>
  </Content>
</Module>
