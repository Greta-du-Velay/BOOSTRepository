<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    
    <ModulePrefs title="Business Employees"
		description="Manage your employees ans assign them learning aims."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		height="400">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"                     
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/" 
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">
			
		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>
    
    <Content type="html">
    <![CDATA[
		
		<!-- We use jQuery to manipulate DOM and Bootstrap for the interface. -->
    	<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/bootstrap.min.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/bootstrap-slider.js"></script>
		<script src="http://dbis.rwth-aachen.de/gadgets/iwc/lib/iwc.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/spin.min.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/ladda.min.js"></script>
						
		<!-- Managers for BCN and Employee related stuff -->
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/boostShared.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/BCNManager.js"></script>
		<script src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/js/EmployeeManager.js"></script>


		<!-- Define CSS -->
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/css/slider.css">
		<link rel="stylesheet" href="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/ladda/ladda-themeless.min.css">


		<style>
			.dropdown-menu{
				max-height: 80px;
    			overflow-y: auto;
			}

			.endDropdown  {
				position: relative;
   				 z-index: 5000;
			}

		</style>

		<!-- JavaScript Block -->
		<script>
			
			var space;
			var employeeList;
			var bcnList;
			var iwcClient;
			
			gadgets.util.registerOnLoadHandler(init);
			
			function init(){
				// create space
				space = new openapp.oo.Resource(openapp.param.space());

				iwcClient = new iwc.Client();
				iwcClient.connect(iwcCallback);
			}

			function iwcCallback(intent){
				if(intent.action == "BCN_CREATE"){
					createBCNfromUri(intent.data, function(bcn){
						bcnList.push(bcn);
						bcnList.sort(function(a, b){if(a.name.toLowerCase() < b.name.toLowerCase()) 
								return -1; else return 1;});

						for(var i=0; i < employeeList.length; i++){
							ensureEmplyoeeBCNConsistency(employeeList[i]);
						}

						//If the modal to set LIs is open we have to update it
						if($("#setLIModal").hasClass("in")){
							renderAllBcns(employeeList[$("#setLIModal").data("employeeIndex")]);
						}
					});
				}

				if(intent.action == "BCN_UPDATE"){
					createBCNfromUri(intent.data, function(updatedBcn){
						for(var i = 0; i < bcnList.length; i++){
							var bcn = bcnList[i];
							if(bcn.uri == intent.data)
								bcnList[i] = updatedBcn;
						}
						for(var i=0; i < employeeList.length; i++){
							ensureEmplyoeeBCNConsistency(employeeList[i]);
						}
						if($("#setLIModal").hasClass("in")){
							renderAllBcns(employeeList[$("#setLIModal").data("employeeIndex")]);
						}
					});
				}

				if(intent.action == "BCN_DELETE"){
					for(var i = 0; i < bcnList.length; i++){
						var bcn = bcnList[i];
						if(bcn.uri == intent.data){
							for(var e = 0; e < employeeList.length; e++){
								delete employeeList[e].learningLevels[bcn.uri];
							}
							bcnList.splice(i, 1);
						}
					}

					if($("#setLIModal").hasClass("in")){
						renderAllBcns(employeeList[$("#setLIModal").data("employeeIndex")]);
					}

				}
			}

			function publishEmployeeCreated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_CREATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeUpdated(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_UPDATE"
				};

				iwcClient.publish(intent);
			}

			function publishEmployeeDeleted(employeeUri){
				var intent = {
					component: "",
					data: employeeUri,
					dataType: "text/json",
					flags :["PUBLISH_GLOBAL"],
					action: "EMPLOYEE_DELETE"
				};

				iwcClient.publish(intent);
			}

			function publishShowEmployeeProgress(uri){
				var intent = {
					component: "",
					data: uri,
					dataType: "text/json",
					action: "SHOW_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			function publishShowOverallEmployeeProgress(){
				var intent = {
					component: "",
					data: "",
					dataType: "text/json",
					action: "SHOW_OVERALL_EMPLOYEE_PROGRESS"
				};

				iwcClient.publish(intent);
			}

			$(function(){
				//question Icon 
				$('#question').click(function(){
					$('#descriptionModal').modal({
						keyboard: true
					});
				}); 

				// routines for modals
				$('#newEmployeeModal').on('hidden.bs.modal', function (e) {
					$('#newEmployeeModal').find('input[type="text"],input[type="email"]').val('');
				});
				$("#addNewEmployeeButton").click(function(){
					clearEmployeeInputWarning();
					$("#newEmployeeModal").modal();
				});

				$("#showOverallProgressButton").click(function(){
					publishShowOverallEmployeeProgress();
				});

				var showOverallGraphTooltipOptions = {};
				showOverallGraphTooltipOptions.title = "Show the overall progress for all your employees.";
				showOverallGraphTooltipOptions.placement = "left";
				$("#showOverallProgressButton").tooltip(showOverallGraphTooltipOptions);
				
				// tooltip for add employee button
				var newEmployeeTooltipOptions = {};
				newEmployeeTooltipOptions.title = "Add a new employee for your company.";
				newEmployeeTooltipOptions.placement = "right";
				$("#addNewEmployeeButton").tooltip(newEmployeeTooltipOptions);
				// save button
				$("#saveNewEmployeeButton").click(function(){
					clearEmployeeInputWarning();
					if (checkInputNewEmployee()) {
						var l = Ladda.create(this);
						l.start();
						saveNewEmployee(function(employee){
							addEmployee(employee);
							$('#newEmployeeModal').modal("hide");
							l.stop();
						});
					}
				});
				
				//update button
				$("#updateEmployeeButton").click(function(){
					clearUpdateInputWarning();
					if(checkInputUpdateEmployee()){
						var l = Ladda.create(this);			
						l.start();			
						var employee = employeeList[$("#updateEmployeeModal").data("employeeIndex")];
						employee.name = $("#inputUpdateEmployeeName").val();
						employee.email = $("#inputUpdateEmployeeEmail").val();	
						updateEmployee(employee, function(){
							publishEmployeeUpdated(employee.uri);
							renderAllEmployees();
							$("#updateEmployeeModal").modal("hide");
							$("#updateEmployeeButton").button("reset");
							l.stop();
						});
					}					
				});

				$("#panel").append("<img id='loader' src='http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/loader.gif'>")
				retrieveAllEmployees(space, function(employees){
					employeeList = employees;
					retrieveAllBcns(space, function(bcns){
						bcnList = bcns;
						bcnList.sort(function(a, b){if(a.name.toLowerCase() < b.name.toLowerCase()) 
								return -1; else return 1;});
						$("#loader").remove();
						renderAllEmployees();
					});
				});

			});

			function saveNewEmployee(callback){
				//get information
				var newEmployee = {};
				newEmployee.name = $("#inputNewEmployeeName").val();
				newEmployee.email = $("#inputNewEmployeeEmail").val();
				newEmployee.learningLevels={};
				ensureEmplyoeeBCNConsistency(newEmployee);
				//save employee
				saveEmployee(newEmployee, space, function(savedEmployee){
					publishEmployeeCreated(savedEmployee.uri);
					callback(savedEmployee);
				});
			}

			function clearEmployeeInputWarning(){
				// clear all warning messages					
				$("#inputNewEmployeeName").parent().removeClass("has-error");
				$("#inputNewEmployeeEmail").parent().removeClass("has-error");
				$("#employeeNameInputWarning").text("");
				$("#employeeEmailInputWarning").text("");
			}

			function clearUpdateInputWarning(){
				// clear all warning messages					
				$("#inputUpdateEmployeeName").parent().removeClass("has-error");
				$("#inputUpdateEmployeeEmail").parent().removeClass("has-error");
				$("#inputUpdateEmployeeNameWarning").text("");
				$("#inputUpdateEmployeeEmailWarning").text("");
			}

			function checkInputNewEmployee()
			{	
				var name = $("#inputNewEmployeeName").val();
				var email = $("#inputNewEmployeeEmail").val();	

				if (name == null || name == "") // empty name
  				{				
					$("#inputNewEmployeeName").parent().addClass("has-error");					
					$("#employeeNameInputWarning").text("Error: Name must be filled out!");
  	  				return false;
   				}

				var atpos = email.indexOf("@");
				var dotpos = email.lastIndexOf(".");

				if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
  				{
  					if (email == null || email == "") // empty email
					{
						$("#inputNewEmployeeEmail").parent().addClass("has-error");						
						$("#employeeEmailInputWarning").text("Error: Email must be filled out!");
						return false;
					}
					$("#inputNewEmployeeEmail").parent().addClass("has-error");
  					$("#employeeEmailInputWarning").text("\"" + email + "\"" +" is not a valid e-mail address");
  					return false;
  				} 
 				return true;
			}

			function checkInputUpdateEmployee()
			{
				var name = $("#inputUpdateEmployeeName").val();
				var email = $("#inputUpdateEmployeeEmail").val();	

				if (name == null || name == "") // empty name
  				{				
					$("#inputUpdateEmployeeName").parent().addClass("has-error");					
					$("#inputUpdateEmployeeNameWarning").text("Error: Name must be filled out!");
  	  				return false;
   				}

				var atpos = email.indexOf("@");
				var dotpos = email.lastIndexOf(".");

				if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= email.length)
  				{
  					if (email == null || email == "") // empty email
					{
						$("#inputUpdateEmployeeEmail").parent().addClass("has-error");						
						$("#inputUpdateEmployeeEmailWarning").text("Error: Email must be filled out!");
						return false;
					}
					$("#inputUpdateEmployeeEmail").parent().addClass("has-error");
  					$("#inputUpdateEmployeeEmailWarning").text("\"" + email + "\"" +" is not a valid e-mail address");
  					return false;
  				} 
 				return true;
			}

			function updateStoredEmployee(){				
				var employee = employeeList[$("#updateEmployeeModal").data("employeeIndex")];
				employee.name = $("#inputUpdateEmployeeName").val();
				employee.email = $("#inputUpdateEmployeeEmail").val();	
				updateEmployee(employee, function(){
					publishEmployeeUpdated(employee.uri);
					$("#updateEmployeeModal").modal("hide");
					$("#updateEmployeeButton").button("reset");
				});
				renderAllEmployees();
			}

			function renderAllEmployees(){
				employeeList.sort(function(a, b){if(a.name.toLowerCase() < b.name.toLowerCase()) return -1; else return 1;});
				$("#employeeOverviewTable").empty();
				for(var i = 0; i < employeeList.length; i++){
					var employee = employeeList[i];
					ensureEmplyoeeBCNConsistency(employee);
					var deleteButton = $(
						"<button class='btn btn-default delete-employee-btn'>" +
							"<span class='glyphicon glyphicon-trash'></span>" + 
						"</button>"
					);
					//assign employee index to the button.					
					deleteButton.data("employeeIndex", i);
					var setLIButton = $(
						"<button class='btn btn-default set-li-btn'>" +
							"<span class='glyphicon glyphicon-flag'></span>" + 
						"</button>"
					);

					setLIButton.data("employeeIndex", i);

					var editButton = $(
						"<button class='btn btn-default edit-employee-btn'>" +
							"<span class='glyphicon glyphicon-edit'></span>" + 
						"</button>"
					);
					editButton.data("employeeIndex", i);

					var graphButton = $(
						"<button class='btn btn-default show-graph-btn'>" +
							"<span class='glyphicon glyphicon-stats'></span>" + 
						"</button>"
					);
					graphButton.data("employeeIndex", i);
					var template = 
						"<tr>" +
							"<td>#{employeeName}" +
								"<a class='btn btn-default mail-employee-btn' href='mailto:" + employee.email +"' style='float:right'><span class='glyphicon glyphicon-envelope'></span></a>" +
							"</td>" +							
							"<td style='width:180px;' align='center'>" +
							"<div class='btn-group'>" +
					
							"</div>" +
							"</td>" +
						"</tr>";
					var entry = $(template.replace(/#{employeeName}/g, employee.name));
					entry.find(".btn-group").append(editButton);					
					entry.find(".btn-group").append(deleteButton);
					entry.find(".btn-group").append(setLIButton);
					entry.find(".btn-group").append(graphButton);
					$("#employeeOverviewTable").append(entry);
					
					$(".set-li-btn").click(function(){
						renderAllBcns(employeeList[$(this).data("employeeIndex")]);
						$("#setLIModal").data("employeeIndex", $(this).data("employeeIndex"));
						$("#setLIModalLabel").text("Define Learning Level for \"" + employeeList[$("#setLIModal").data("employeeIndex")].name + "\"");
						$("#setLIModal").modal();
					});

				}

				var deleteEmployeeTooltipOptions = {};
				deleteEmployeeTooltipOptions.title = "Delete";
				deleteEmployeeTooltipOptions.container = "body";
				$(".delete-employee-btn").tooltip(deleteEmployeeTooltipOptions);

				var editEmployeeTooltipOptions = {};
				editEmployeeTooltipOptions.title = "View/Edit";
				editEmployeeTooltipOptions.container = "body";
				$(".edit-employee-btn").tooltip(editEmployeeTooltipOptions);

				var editLearningLevelsTooltipOptions = {};
				editLearningLevelsTooltipOptions.title = "Adjust learning levels";
				editLearningLevelsTooltipOptions.container = "body";
				$(".set-li-btn").tooltip(editLearningLevelsTooltipOptions);

				var showGraphTooltipOptions = {};
				showGraphTooltipOptions.title = "Show progress.";
				showGraphTooltipOptions.container = "body";
				$(".show-graph-btn").tooltip(showGraphTooltipOptions);

				$(".delete-employee-btn").click(function(){
					var employeeIndex = $(this).data("employeeIndex");
					// aleart and confirm deleting process.
					$("#alertInModal").alert();
					$("#deleteAlertMessage").text("Do you really want to delete \"" + employeeList[employeeIndex].name + "\"?");
					$("#deleteAlertModal").modal();
					$("#confirmDeleteButton").off().click(function(){
						var l = Ladda.create(this);
						l.start();
						deleteEmployee(employeeList[employeeIndex], function(){
							publishEmployeeDeleted(employeeList[employeeIndex].uri);
							employeeList.splice(employeeIndex, 1);
							renderAllEmployees();
							$("#deleteAlertModal").modal("hide");
							l.stop();
						});	
					});
				});

				$(".edit-employee-btn").click(function(){
					clearUpdateInputWarning();	
					var employeeIndex = $(this).data("employeeIndex");
					var employee = employeeList[employeeIndex];
					$("#inputUpdateEmployeeName").val(employee.name);
					$("#inputUpdateEmployeeEmail").val(employee.email);
					$("#updateEmployeeModal").data("employeeIndex", employeeIndex);					
					$("#updateEmployeeModal").modal();
				});

				$(".show-graph-btn").click(function(){
					var employeeIndex = $(this).data("employeeIndex");
					var employee = employeeList[employeeIndex];
					publishShowEmployeeProgress(employee.uri);
				});
					
			}

			function ensureEmplyoeeBCNConsistency(employee){
				for(var i = 0; i < bcnList.length; i++){
					var bcn = bcnList[i];
					if(!employee.learningLevels.hasOwnProperty(bcn.uri)){
						employee.learningLevels[bcn.uri] = {};
						employee.learningLevels[bcn.uri].isRelevant = true;
					}
					if(!employee.learningLevels[bcn.uri].hasOwnProperty("isRelevant"))
						employee.learningLevels[bcn.uri].isRelevant = true;
					var learningLevel = employee.learningLevels[bcn.uri];
					for(var j = 0; j < bcn.learningIndicators.length; j++){
						var li = bcn.learningIndicators[j];
						if(!learningLevel.hasOwnProperty(li.id)){
							learningLevel[li.id] = {};
							learningLevel[li.id].start = 0;
							learningLevel[li.id].current = 0;
							learningLevel[li.id].end = llevel.length -1;
						}
					}
				}
			}

			function renderAllBcns(employee){

				/* Sort according priority index and name */

				bcnList.sort(function(a, b){
					if (a.priority==b.priority) {if(a.name.toLowerCase() < b.name.toLowerCase()) return -1; else return 1;}
					if(a.priority > b.priority)  return -1; else return 1;
				});

				$("#bcnPanel").empty();

				for(var i = 0; i < bcnList.length; i++){
					
					// template for one entry in the BCN List					
					var bcnTemplate = 
					"<div class='panel panel-default'>" +
    						"<div class='panel-heading'>" + 
      							"<h4 class='panel-title'>" +
        						"<span class='glyphicon' style='margin-right:5px;'></span>" +
        						"<a data-toggle='collapse' data-parent='#bcnPanel' href='#collapse#{id}'>" + 
          							"#{bcnName}" +
								"<span class='caret'></span>"+
							"</a>" + 
							"<div class='checkbox' style='float:right; margin-top:1px'>" +
  								"<label>" +
  									"Relevant" +
    								"<input class='relevance-checkbox' type='checkbox' value=''>" +
  								"</label>" +
							"</div>" +
      							"</h4>" + 
    						"</div>" + 
    						"<div id='collapse#{id}' class='panel-collapse collapse'>" + 
      								"<ul style='margin-bottom:0px;' class='list-group' id='LIList#{id}'>" +
								"</ul>" + 
    						"</div>" +
  					"</div>";
					
					// template for entries in the LI list of one BCN
					var LITemplate = 
						"<li class='list-group-item'>" +
							"<h4><span class='glyphicon glyphicon-flag' style='margin-right:5px;'></span> #{LI} </h4>" + 
						"</li>";

				//	var sliderTemplate = 
				//		"<div class='slider mySlider' id='slider#{li}'" + 
				//			"style='width:200px;'" +
				//		"></div>";

					var labelTemplate = '<span style="margin-right:#{leftMargin};"> #{nameLevel} level: </span>';

					var dropdownTemplate = 
						'<div class="btn-group">' +
						  '<button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">' +
    						'Undefined <span class="caret"></span></button>' +
						  '<ul class="dropdown-menu #{dropdownId}" role="menu">' +
						 		'<li><a data-learningLevel="0" href="#">0</a></li>' +
						  		'<li><a data-learningLevel="1" href="#">1</a></li>' +
					            '<li><a data-learningLevel="2" href="#">2</a></li>' +
					           	'<li><a data-learningLevel="3" href="#">3</a></li>' +
					           	'<li><a data-learningLevel="4" href="#">4</a></li>' +						
					           	'<li><a data-learningLevel="5" href="#">5</a></li>' +
						  '</ul>' +
						'</div>';

					
	
			
					var bcn = bcnList[i];

					var entry = $(bcnTemplate.replace(/#{bcnName}/g, bcn.name).replace(/#{id}/g, i));
					entry.find(".relevance-checkbox").data("bcnUri", bcn.uri);


					if(employee.learningLevels[bcn.uri].isRelevant)
						entry.closest(".panel").find(".glyphicon").addClass("glyphicon-star").css({color:priorityColors[bcn.priority]});
						
					else
						entry.closest(".panel").find(".glyphicon").addClass("glyphicon-star-empty").css({color:priorityColors[bcn.priority]});;

					for(var j = 0; j < bcn.learningIndicators.length; j++){

						var li = bcn.learningIndicators[j];
						var liEntry = $(LITemplate.replace(/#{LI}/g, li.name));
	
						var startLabel = $(labelTemplate.replace(/#{nameLevel}/g, "Start").replace(/#{leftMargin}/g,"20px"));
						var startDropdown = $(dropdownTemplate.replace(/#{dropdownId}/g, "startDropdown"));

						var currentLabel = $(labelTemplate.replace(/#{nameLevel}/g, "Current").replace(/#{leftMargin}/g,"2px"));
						var currentDropdown = $(dropdownTemplate.replace(/#{dropdownId}/g, "currentDropdown"));

						var endLabel = $(labelTemplate.replace(/#{nameLevel}/g, "End").replace(/#{leftMargin}/g,"25px"));
						var endDropdown = $(dropdownTemplate.replace(/#{dropdownId}/g, "endDropdown"));

				
						entry.find("#LIList"+i).append(liEntry);

						var allDropdowns = [startDropdown, currentDropdown, endDropdown];
						var allLabels = [startLabel, currentLabel, endLabel];
						var div = '<div style="margin-top:15px;"></div>';
						var caret = '<span class="caret"></span>';

						for (var temp = 0; temp < allDropdowns.length; temp++){

								allDropdowns[temp].find(">ul").data("bcnUri", bcn.uri);
								allDropdowns[temp].find(">ul").data("liID", li.id);
								liEntry.append(allLabels[temp]).append(allDropdowns[temp]);
								liEntry.append(div);
								if (allDropdowns[temp] == currentDropdown) {
										allDropdowns[temp].find(".btn").text(employee.learningLevels[bcn.uri][li.id].current + ' ');
										allDropdowns[temp].find("ul").data('currentLevel', employee.learningLevels[bcn.uri][li.id].current);
								} else if (allDropdowns[temp] == startDropdown) {
										allDropdowns[temp].find(".btn").text(employee.learningLevels[bcn.uri][li.id].start + ' ');
										allDropdowns[temp].find("ul").data('startLevel', employee.learningLevels[bcn.uri][li.id].start);
								} else {
										allDropdowns[temp].find(".btn").text(employee.learningLevels[bcn.uri][li.id].end + ' ');
										allDropdowns[temp].find("ul").data('endLevel', employee.learningLevels[bcn.uri][li.id].end);
								}

								allDropdowns[temp].find(".btn").append(caret);

							}
					}

					$("#bcnPanel").append(entry);
				}

				$("#updateLearningLevelsButton").off().click(function(){

					 $(".currentDropdown").each(function(){
					     employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].current = $(this).data("currentLevel");
						console.log("Current level: " + employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].current);
					 });

					 $(".startDropdown").each(function(){
					     employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].start = $(this).data("startLevel");
					 	console.log("Start level: " + employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].start);

					 });

					 $(".endDropdown").each(function(){
					     employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].end = $(this).data("endLevel");
					 	console.log("End level: " + employee.learningLevels[$(this).data("bcnUri")][$(this).data("liID")].end);

					 });

					//$(".mySlider").each(function(){
						
					//	employee.learningLevels[$(this).data("bcnUri")][$(this).data("liId")].start = $(this).data("start");

					//	employee.learningLevels[$(this).data("bcnUri")][$(this).data("liId")].end = $(this).data("end");
					//});
					$(".relevance-checkbox").each(function(){
						var bcnUri = $(this).data("bcnUri");
						employee.learningLevels[bcnUri].isRelevant = $(this).prop("checked");
					});
					var l = Ladda.create(this);
					l.start();
					updateEmployee(employee, function(){
						publishEmployeeUpdated(employee.uri);
						$("#setLIModal").modal("hide");
						l.stop();
					});
				});
				$("#setLIModal").find(".relevance-checkbox").change(function(){
					var isChecked = $(this).prop("checked");
					var glyphicon = $(this).closest(".panel").find(".glyphicon");
					if(isChecked){
						glyphicon.removeClass("glyphicon-star-empty");
						glyphicon.addClass("glyphicon-star");
						glyphicon.find(".glyphicon-star").css({color:priorityColors[bcn.priority]});
					}
					else{
						glyphicon.removeClass("glyphicon-star");
						glyphicon.addClass("glyphicon-star-empty");
						glyphicon.find(".glyphicon-star-empty").css({color:priorityColors[bcn.priority]});
					}
				});
				$("#setLIModal").find(".relevance-checkbox").each(function(){
					$(this).prop("checked", employee.learningLevels[$(this).data("bcnUri")].isRelevant);
				});	

				$(".currentDropdown li a").click(function(){

       				
       					$(this).parents(".btn-group").find(".btn").text($(this).text()+ ' ');
       				
       					$(this).parents(".btn-group").find(".btn").append('<span class="caret"></span>');
       				
     					$(this).parents("ul").data('currentLevel', $(this).attr('data-learningLevel'));
     				
     					console.log("CL: " + $(this).parents("ul").data('currentLevel'));

   					 });

				$(".startDropdown li a").click(function(){

       				
       					$(this).parents(".btn-group").find(".btn").text($(this).text()+ ' ');
       				
       					$(this).parents(".btn-group").find(".btn").append('<span class="caret"></span>');
       				
      					$(this).parents("ul").data('startLevel', $(this).attr('data-learningLevel'));
     				
     					console.log("SL: " + $(this).parents("ul").data('startLevel'));

   		 			 });


				$(".endDropdown li a").click(function(){

       				
       					$(this).parents(".btn-group").find(".btn").text($(this).text()+ ' ');
       				
       					$(this).parents(".btn-group").find(".btn").append('<span class="caret"></span>');
       				
      					$(this).parents("ul").data('endLevel', $(this).attr('data-learningLevel'));
     				
     					console.log("EL: " + $(this).parents("ul").data('endLevel'));

   					 });
			}

			function addEmployee(employee){
				employeeList.push(employee);
				renderAllEmployees();
			}

		</script>

		<!-- HTML Block -->
		
		<div style="overflow-y: scroll; height:400px;">
		<div class="panel panel-primary">
			
			<div class="panel-heading">
					<button id="question" type="button" class="btn btn-default launch-modal" style="float:right; margin:-5 5 10 5px; color:#428BCA;"><span  class="glyphicon glyphicon-question-sign"></span></button>
					<h3 class="panel-title">
					<span class="glyphicon glyphicon-user" style="margin-right:5px;"></span>Business employees
				</h3>
		  	</div>
		  	
			<div id='panel' class="panel-body">
				<button type="button" class="btn btn-primary" id="addNewEmployeeButton">
					<span class="glyphicon glyphicon-plus"></span>
				</button>
				<button type="button" class="btn btn-primary pull-right" id="showOverallProgressButton"><span class="glyphicon glyphicon-stats"></span></button>
			</div>
			<table class="table table-striped table-bordered" id="employeeOverviewTable">
			</table>
		</div>
		</div>

		<div class="modal fade" id="newEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">Add a new employee</h4>
  					</div>
  					<div class="modal-body">
    					<form role="form">
						<div class="form-group">
							<label for="inputNewEmployeeName" class="control-label">Name</label>
							<input type="text" class="form-control" id="inputNewEmployeeName" placeholder="Enter name">
							<span class="help-block"><h6 id="employeeNameInputWarning"></h6></span>
						
						</div>
						<div class="form-group">
							<label for="inputNewEmployeeEmail" class="control-label">Email</label>
							<input type="text" class="form-control" id="inputNewEmployeeEmail" placeholder="Enter email">
							<span class="help-block"><h6 id="employeeEmailInputWarning"></h6></span>
						</div>
						</form>
					</div>
  					<div class="modal-footer">
				        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				        <button class="btn btn-primary ladda-button" data-style="zoom-out" id="saveNewEmployeeButton"><span class="ladda-label">Save</span></button>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="updateEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">View/Update Employee</h4>
  					</div>
  					<div class="modal-body">
    					<form role="form">
						<div class="form-group">
							<label for="inputUpdateEmployeeName" class="control-label">Name</label>
							<input type="text" class="form-control" id="inputUpdateEmployeeName" placeholder="Enter name">
							<span class="help-block"><h6 id="inputUpdateEmployeeNameWarning"></h6></span>						
						</div>
						<div class="form-group">
							<label for="inputUpdateEmployeeEmail" class="control-label">Email</label>
							<input type="text" class="form-control" id="inputUpdateEmployeeEmail" placeholder="Enter email">
							<span class="help-block"><h6 id="inputUpdateEmployeeEmailWarning"></h6></span>						
						</div>
					</form>
					</div>
  					<div class="modal-footer">
				        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
					<button class="btn btn-primary ladda-button" data-style="zoom-out" id="updateEmployeeButton"><span class="ladda-label">Update</span></button>				        
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class="modal fade" id="setLIModal" tabindex="-1" role="dialog" aria-labelledby="setLIModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    						<h4 class="modal-title" id="setLIModalLabel"></h4>
    				</div>
					<div class="modal-body">
						<div class="panel-group" id="bcnPanel">
						</div>
					</div>
					<div class="modal-footer">
				        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
					<button class="btn btn-primary ladda-button" data-style="zoom-out" id="updateLearningLevelsButton"><span class="ladda-label">Save</span></button>  					
					</div>			
				</div>			
			</div>
		</div>
	

		<div class="modal fade" id="deleteAlertModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
  					<div class="modal-body">
						<div class="alert alert-danger fade in" id="alertInModal">
							<h4 id='deleteAlertMessage'></h4>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
							<button class="btn btn-danger ladda-button" data-style="zoom-out" id="confirmDeleteButton"><span class="ladda-label">Delete</span></button>				       
						</div>
					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

	<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    		<h4 class="modal-title">Business Employees Help</h4>
            </div>
          <div class="modal-body">
            <div class="panel-group" id="levelsdef" align="justify">
             <ul style="padding: 10px;">
			 <li>To add new business employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/add.PNG" alt="add" width="30" height="20"> icon. In the new view enter <i>Name</i>, <i>Email</i> for your employee. Click on the <i>Save</i> button to save the changes.</li>
             <li>To see overall progress of all goals click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/overall.PNG" alt="overall" width="30" height="20"> icon. The graph will be shown in the <i>Learning Progress</i> widget.</p></li>
             <li>To edit employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/edite.PNG" alt="edite" width="30" height="20"> icon.</li>
             <li>To delete employee click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/delete.PNG" alt="delete" width="30" height="20"> icon.</li>
             <li>To assign goals to employee and define learning levels click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/flag.PNG" alt="assign" width="30" height="20"> icon. 
              In the new view check in relevant goals for this employee and define learning levels by clicking on the goal name and selecting start, current and end level accordingly. 
              <br>The description of learning level as follows: 
              	<ul style="padding: 10px;">
                	<li><b>Level 0:</b> I have not started to address the skills / knowledge required for this indicator.</li> 
               	  	<li><b>Level 1:</b> I have started to try to address the skills / knowledge for this indicator but need more time / support to make progress.</li>
                	<li><b>Level 2:</b> I feel that I have acquired some skills / knowledge and am aware of the progress I have made with regards to this indicator but feel that I need to learn more before I can put into practice on the job.</li>
                	<li><b>Level 3:</b> I feel that I have acquired significant skills / knowledge for my current job role and have started   to put into practice on the job.</li>
                	<li><b>Level 4:</b> I feel that I have acquired significant knowledge of these skills for my current job role but for future development within the company, I recognise that I can develop further.</li>
               		<li><b>Level 5:</b> I feel confident enough in using these skills and knowledge so that I could support a few colleagues with regard to these?</li>
              	</ul>
              </li>
             <li>To monitor the learning progress of employee straight forward in <i>Learning Progress</i> widget click on <img src="http://127.0.0.1:8073/role/BOOSTRepository/henm1314g3/resources/chart.PNG" alt="chart" width="30" height="20"> icon.</li>
             </ul>	
          </div>
          <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>          
          </div>      
        </div>      
      </div>
    </div>
	]]>
  </Content>
</Module>
