<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    
    <ModulePrefs title="Learning Documents"
		description="Widget to manage learning Documents."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		height="400">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"                     
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/" 
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">
			
		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>
    
    <Content type="html">
    <![CDATA[
		
		<!-- We use jQuery to manipulate DOM and jQuery-UI for the interface. -->
    	<script src="http://127.0.0.1:8073/role/henm1314g3/js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8073/role/henm1314g3/js/bootstrap.min.js" type="text/javascript"></script>

		<!-- Define CSS -->
		<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
		<link href="http://127.0.0.1:8073/role/henm1314g3/css/bootstrap.min.css" rel="stylesheet">
		<link href="http://127.0.0.1:8073/role/henm1314g3/css/bootstrap-theme.min.css" rel="stylesheet">
		<style>
			#tabs li .ui-icon-close { float: left; margin: 0.4em 0.2em 0 0; cursor: pointer; }
		</style>		
		
		<!-- JavaScript Block -->
		<script>
			var tabTemplate;
			var tabContentTemplate;
			var tabs;
			
			//This jQueryUI function magically creates tabs for us.
			$(function() {
				tabTemplate = "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close' role='presentation'>Remove Tab</span></li>"
				tabContentTemplate = "<div style='overflow:scroll; overflow-x:hidden; height:250px'><h1>#bcn_name</h1> <p>#bcn_description</p> <p>#li_list</p></div>"
				//$( "#tabs" ).tabs();
				tabs = $( "#tabs" ).tabs();
			});

			var space;
			var bcnsList = new Array();
			// for the current loaded LDs
			var ldsList = new Array();
			gadgets.util.registerOnLoadHandler(init);
			
			function init(){
				
			    console.log("Widget loaded");
				
				/*
					Here we get the space resource.
					It is the top level resource which is shared by all users.
				*/
				space = new openapp.oo.Resource(openapp.param.space());

				/*
					We retrieve all BCNs. They will be stored in the 'bcnsList' array.
				*/
				retrieveAllBcns(
					//This callback will fire after all BCNs are loaded.
					function(){
						//We sort the BCNs based on their name property.
						bcnsList.sort(function(a, b){if(a.name < b.name) return -1; else return 1;});
						//Once the BCNs are loaded and sorted we render all of them in the overview
						renderAllBCNs();
						if(bcnsList.length==0)
							$("#bcns").append("<td>No BCNs defined.</td>");
					}
				);
				
				retrieveAllLds(
					//This callback will fire after all LDs are loaded.
					function(){
						//We sort the LDs based on their name property.
						ldsList.sort(function(a, b){if(a.name < b.name) return -1; else return 1;});
					}
				);
			}
			
			// This function is used to clear the content of textfield or textarea after the
			// content has been submitted
			function clearContents(element) {
			    element.value = '';
			}
			

			function retrieveAllBcns(callback){
				space.getSubResources({
					relation: openapp.ns.role + "data",
					type: "my:ns:bcn",
					onAll: function(bcns) {
								/*
									Be careful here. The getRepresentation(...) function runs
									asynchronously. This means that the whole for loop is finished
									before even one BCN has been added to the array. To get informed
									when the array is finished I used this callback mechanism in the
									if block. 
								*/
								if(bcns.length == bcnsList.length)
										callback();
								for(var i = 0; i < bcns.length; i++){
									bcns[i].getRepresentation("rdfjson", function(bcnObject){
									bcnsList.push(bcnObject);
									if(bcns.length == bcnsList.length){
										callback();

									}
									
									});
								}
							}
				});
			}
			
			function retrieveAllLds(callback) {
				space.getSubResources({
					relation: openapp.ns.role + "data",
					type: "my:ns:ld",
					onAll: function(lds) {
								if(lds.length == ldsList.length)
									callback();
								for(var i = 0; i < lds.length; i++){
									lds[i].getRepresentation("rdfjson", function(ldObject){
									ldsList.push(ldObject);
									if(lds.length == ldsList.length){
										callback();

									}
									
									});
								}
							}
				});
			}
			
			
			function saveLd(){
				var ld = {
					"uri":"", //This will be set after the resource for the ld has been created.
					"bcn_uri": $("#addButton").val(), // uri of the respective bcn
					"name":$("#input_ld_name").val(),
					"description":$("#input_ld_description").val(),
					"link": $("#input_ld_link").val()
				}

				//Here we create the resource. The LD gets stored in the space.
				space.create({
					relation: openapp.ns.role + "data",
					type: "my:ns:ld",
					representation: ld, //The representation refers to the object
					callback: function(ldResource){
						//Now we have an URI for our BCN and we need to update the resource
						ld.uri = ldResource.getURI();
						ldResource.setRepresentation(ld, "application/json", reload());
					}
				});
				
				// Clear input fields
				clearContents(input_ld_name);
				clearContents(input_ld_description);
				clearContents(input_ld_link);
				
				$("#addTab").addClass("hidden");
				tabs.tabs("option", "active", 1);
			}
			
			function reload() {
				window.location.reload();
				//showLdTab();
			}
			
			

			function renderAllBCNs(){
				$("#bcns").empty();
				for(var i = 0; i < bcnsList.length; i++){
					renderBCN(bcnsList[i]);
				}
			}
			
			function renderAllLds(bcn) {
				$("#lds").empty();
				for(var i = 0; i < ldsList.length; i++){
					if(ldsList[i].bcn_uri === bcn.uri) {
						renderLd(ldsList[i]);
					}
				}
			}
			
			function renderLDwithLI(bcn, li) {
				// later
			}
			
			function renderBCN(bcn){
					//Here I use jQuery for the DOM manipulation
					//Each BCN is an entry in the table
					var tableRow=$("<tr></tr>");					
					//Show a button to show the learning documents of the BCN
					var bcnButton = $('<button class="btn-sm btn-info">'+bcn.name+'</button>');
					bcnButton.attr("name", "update_bcn");
					bcnButton.click(function() {showLdTab(bcn);});
					col = $("<td></td>").append(bcnButton);
					tableRow.append(col);
					
					var dropClass = $('<div></div>');					
					var dropDownName = "dropDown"+bcn.name;
					var liButton = $('<button class="btn-sm btn-info dropdown-toggle" id="'+dropDownName+'" data-toggle="dropdown">Choose your LI <span class="caret"></span></button>');
					
					dropClass.append(liButton);
					var dropDownMenu = $('<ul class="dropdown-menu" role="menu" aria-labelledby="'+dropDownName+'"></ul>');
					var element;
					var li  = bcn.learningIndicators;
					//click on the name should lead to the learning documents page
					for(i=0; i<li.length; i++) {
						element = $('<li role="presentation"> <a role ="menuitem" href="#" tabindex="-1">'+li[i].name+'</a></li>');
						
						dropDownMenu.append(element);
					}			
					
					dropClass.append(dropDownMenu);
					col = $('<td class="dropdown"></td>').append(dropClass);
					
					tableRow.append(col);	
					$("#bcns").append(tableRow);
			}
			
			
			
			function renderLd(ld) {
					//Here I use jQuery for the DOM manipulation
					//Each LD is an entry in the table
					var tableRow=$('<tr></tr>');
					
					col = $("<td></td>").append('<span>' + ld.name + '</span>');
					tableRow.append(col);
					
					col = $("<td></td>").append('<span style="font-size:small">' + ld.description + '</span>');
					tableRow.append(col);
					
					col = $("<td></td>").append('<span><a href="' + ld.link + '" target="_blank">'+ld.link+'</a></span>');
					tableRow.append(col);
					
					
					$("#lds").append(tableRow);
					
					//show a update Button
					var updateButton = $('<button class="btn-sm btn-primary"><span class="glyphicon glyphicon-edit"></span></button>');
					updateButton.attr("name", "update_ld");
					updateButton.click(function() {showUpdateTab(ld);});
					tableRow.append($("<td></td>").append(updateButton));
					
					//show a delete Button
					var deleteButton = $('<button class="btn-sm btn-danger"><span class="glyphicon glyphicon-trash"></span></button>');
					deleteButton.attr("name", "delete_ld");
					deleteButton.click(function() {openapp.resource.del(ld.uri, window.location.reload());});
					tableRow.append($("<td></td>").append(deleteButton));
					
			}
			
			

			

			function showLdTab(bcn) {
				
				renderAllLds(bcn);
				
				var addButton = $('<button class="btn-sm btn-success"><span class="glyphicon glyphicon-plus"></span></button>');
				addButton.attr("name", "add_ld");
				addButton.click(function() {showAddTab();});
				
				$("#lds").append($("<td></td>").append(addButton));
				$("#addButton").val(bcn.uri);
				
				tabs.tabs( "refresh" );
				tabs.tabs("option","active", 1);
			}
			
			function showAddTab() {
					$("#addTab").removeClass("hidden");
					tabs.tabs("option", "active", 3);
			}
			
			function showUpdateTab(ld) {
				
				$("#updateTab").removeClass("hidden");
			
				$("#updateButton").val(ld.uri);
				$("#input_ld_name_update").val(ld.name);
				$("#input_ld_description_update").val(ld.description);
				$("#input_ld_link_update").val(ld.link);
				
				tabs.tabs("option","active", 2);
			}
			
			function updateLd() {
			
			}
			

			 $(function(){tabs.delegate( "span.ui-icon-close", "click", function() {
				var panelId = $( this ).closest( "li" ).remove().attr( "aria-controls" );
				$( "#" + panelId ).remove();
				tabs.tabs( "refresh" );
				});})

		</script>
		
		<!-- HTML Block -->

		<div id="tabs">
			<ul>
				<li><a href="#tabs-1">Overview</a></li>
				<li><a href="#tabs-2">Learning Documents</a></li>
				<li id="updateTab" class="hidden"><a href="#tabs-3">Update LD</a></li>
				<li id="addTab" class="hidden"><a href="#tabs-4">Add LD</a></li>
			</ul>

			<div id="tabs-1" class="container">
				<table id="bcns">
					<td>Loading BCNs...</td>
				</table>
			</div>
		
			<div id="tabs-2" class="container">
				<div id="ldTable" class="table-responsive container">
				<table id="lds" class="table table-striped table-condensed">
					<thead>
						<tr>
						<th>Title</th>
						<th>Description</th>
						<th>Link</th>
						</tr>
					</thead>
			        <td>Loading Learning Documents...</td>
			    </table>
				</div>
			</div>
			
			<div id="tabs-3" class="container">
				<table>
			      <tr>
			        <td><label for="input_ld_name_update">Name:</label></td>
			        <td><input type="text" id="input_ld_name_update" value=""  /></td>
			      </tr>
			      <tr>
			        <td><label for="input_ld_description_update">Description:</label></td>
			        <td><textarea type="text" id="input_ld_description_update" value="" /></td>
			      </tr>
				  <tr>
			        <td><label for="input_ld_link_update">Link:</label></td>
			        <td><input type="text" id="input_ld_link_update" value="" /></td>
			      </tr>
				  <tr>
					<td><button id="updateButton" class="btn-success btn-sm" value="" onclick="updateLd()" ><span class="glyphicon glyphicon-ok"></span></button></td>
				  </tr>
			    </table>
			</div>
			
			<div id="tabs-4" class="container">
				<table>
			      <tr>
			        <td><label for="input_ld_name">Name:</label></td>
			        <td><input type="text" id="input_ld_name" value=""  /></td>
			      </tr>
			      <tr>
			        <td><label for="input_ld_description">Description:</label></td>
			        <td><textarea type="text" id="input_ld_description" value="" /></td>
			      </tr>
				  <tr>
					<td><label for="input_ld_link">Link:</label></td>
			        <td><input type="text" id="input_ld_link" value="" /></td>
			    </table>
				<table>
					<tr><td><button id="addButton" class="btn-success btn-sm" value="" onclick="saveLd()" ><span class="glyphicon glyphicon-ok"></span></button></td></tr>
			    </table>
			</div>
			
		</div>
	]]>
  </Content>
</Module>