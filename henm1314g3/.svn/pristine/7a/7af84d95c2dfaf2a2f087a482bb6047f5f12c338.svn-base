<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    
    <ModulePrefs title="Boost Documents"
		description="Widget to manage learning Documents."
		author="Team Boost"
		author_email="henm1314g3@dbis.rwth-aachen.de"
		height="400">
  	<Require feature="opensocial-0.8" />
    <Require feature="openapp" />
    <OAuth>
		<Service name="openapp"                     
		    xmlns:openapp="http://www.role-project.eu/xml/openapp/opensocialext/" 
		    openapp:service="http://purl.org/role/terms/spaceService"
		    openapp:permitReadAppend="http://purl.org/role/terms/data">
			
		    <Request method="" url=""/>
			<Authorization url=""/>
			<Access method="" url=""/>
		</Service>
    </OAuth>
    </ModulePrefs>
    
    <Content type="html">
    <![CDATA[
		
		<!-- We use jQuery to manipulate DOM and jQuery-UI for the interface. -->
    	<script src="http://127.0.0.1:8073/role/henm1314g3/js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8073/role/henm1314g3/js/bootstrap.min.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8073/role/henm1314g3/js/BCNManager.js" type="text/javascript"></script>

		<!-- Define CSS -->
		
		<link href="http://127.0.0.1:8073/role/henm1314g3/css/bootstrap.min.css" rel="stylesheet">
		
		<!-- JavaScript Block -->
		<script>
			
			var space;
			var bcnsList = new Array();
			var ldsList= new Array();
			
			
			gadgets.util.registerOnLoadHandler(init);
			var bcnGlobal; // for the current bcn
			var ldGlobal; // for the ld to update (saves the id of the ld in the array)
			function init(){
			    console.log("Widget loaded");
				space = new openapp.oo.Resource(openapp.param.space());
			}
			
			$(function(){
				$('#addLdModal').on('hidden.bs.modal', function (e) {
					$('#addLdModal').find('input[type="text"],input[type="email"],textarea,select').val('');
				});
				
				$("#saveLdButton").click(function(){
					$(this).button("loading");
					saveNewLd();
				});
				
				$("#updateLdButton").click(function(){
					$(this).button("loading");
					updateLd();
				});
				
				$('#ovNav').click(function() {
					if( $('#ovTab').hasClass('active') ) return;
					changeTabs();
				});

				retrieveAllBcns(space, function(bcns){
						bcnsList = bcns;
						//We sort the BCNs based on their name property.
						bcnsList.sort(function(a, b){if(a.name < b.name) return -1; else return 1;});
						renderAllBCNs();
						if(bcnsList.length==0)
							$("#bcns").append("<td>No BCNs defined.</td>");
					}
				);

			});
			
			function showAddModal() {
			
				$('#inputLdLiLevelDiv').remove();
				
				var div = $('<div id="inputLdLiLevelDiv" class="form-group"></div>');			
				var liLabel = $('<label for="inputLdLiLevel" id="labelLdLiLevel">Learning Indicator:</label>');
				div.append(liLabel);
				
				var select = $('<select id="inputLdLiLevel" style="border:1px solid #D3D3D3; background-color:#FFFFFF; margin-left:5px;"></select>');
				var liList = bcnGlobal.learningIndicators;
				for(i = 0; i< liList.length; i++) {
					var option = $('<option>'+liList[i].name+'</option>');
					select.append(option);
				}
				div.append(select);
				$("#addForm").append(div);
				
				$("#addLdModal").modal();
			}
			
			function saveNewLd(){
				var ld = {
					"name":$("#inputLdName").val(),
					"description":$("#inputLdDescription").val(),
					"link": $("#inputLdLink").val(),
					"liLevel":$("#inputLdLiLevel").val()
				}
				var lds = bcnGlobal.learningDocuments;
				//var lds = ldsList;
				lds.push(ld);
				if(ld.liLevel == $("#curLi").text()){
					ldsList.push(ld);
				}
				
				updateBCNwithLds(lds, function() {
					renderLds(ldsList);
					$('#addLdModal').modal("hide");
					$("#saveLdButton").button("reset");
				});
				
			}
			
			function renderAllBCNs(){
				$("#bcns").empty();
				for(var i = 0; i < bcnsList.length; i++){
					renderBCN(bcnsList[i]);
				}
			}
			
			function changeTabs(li) {
			//switch to learning document tab
				if( $('#ovTab').hasClass('active') ) {
				
					$('#ovTab').removeClass('active');
					$('#ovTab').addClass('hidden');
					
					$('#ldNav').addClass('active');
					$('#ldNav').removeClass('hidden');
					
					$('#ldTab').removeClass('hidden');
					$('#ldTab').addClass('active');
					$("#ovNav").css("cursor","pointer");
					$('#ovNav').text("");
					$('#ovNav').append('<a id="ovHighlight">Choose the BCN</a>');
					if( li != null) {
						$('#ldNav').html('Learning Documents for '+bcnGlobal.name + " and Learning Indicator <span id='curLi'>" + li.name + '</span>');
					} else {
						$('#ldNav').html('Learning Documents for '+bcnGlobal.name);
					}		
			//switch to overview
				} else if( $('#ldTab').hasClass('active') ) {
				
					$('#ldNav').removeClass('active');
					$('#ldNav').addClass('hidden');
					
					$('#ldTab').removeClass('active');
					$('#ldTab').addClass('hidden');
					
					$('#ovTab').removeClass('hidden');
					$('#ovTab').addClass('active');
					
					$('#ovHighlight').remove();
					$('#ovNav').append('Choose the BCN');
					$("#ovNav").css("cursor","default");
				}
			}
			
			function renderLdWithLi(i) {
				$("#lds").empty();
				
				var li = bcnGlobal.learningIndicators[i];
				ldsList = [];
				
				var templds = bcnGlobal.learningDocuments;
				
				for(j = 0; j < templds.length; j++) {
					if(templds[j].liLevel == li.name) {
						ldsList.push(templds[j]);
					}
				}
				renderLds(ldsList);
				
				$("#ldTab").removeClass("hidden");
				changeTabs(li);
				
			}
			
			function updateBCNwithLds(lds, callback) {
				var newBCN = {
					"uri": bcnGlobal.uri,
					"name":bcnGlobal.name,
					"description":bcnGlobal.description,
					"learningIndicators":bcnGlobal.learningIndicators,
					"learningDocuments":lds
				}
				updateBCN(newBCN, callback);
			
			}
			
			
			
			function renderBCN(bcn) {
				var showAllButton = $("<button class='btn btn-default show-ld-btn'><span class='glyphicon glyphicon-list'></span></button>");
					showAllButton.click(function() {
						bcnGlobal = bcn;
						showLdTab();
					});
				var template = 	"<tr>" +
									"<td>#{bcnName}</td>" +
									"<td style='width:100px;' align='center'>" +
										"<div class='btn-group'>" +
										"</div>" +
									"</td>" +
								"</tr>";
				var entry = $(template.replace(/#{bcnName}/g, bcn.name));
				
				var dropClass = $('<div class="btn-group"></div>');					
				var dropDownName = "dropDown"+bcn.name;
				var liButton = $('<button type="button" class="btn btn-default dropdown-toggle li-btn" id="'+dropDownName+'" data-toggle="dropdown"><span class="glyphicon glyphicon-chevron-down"></span></button>');
				
				
				var li  = bcn.learningIndicators;
				
				dropClass.append(liButton);
				var dropDownMenu = $('<ul class="dropdown-menu pull-right" role="menu" aria-labelledby="'+dropDownName+'"></ul>');
				var element;
				
				//click on the name should lead to the learning documents page
				for(var i=0; i<li.length; i++) {
					element = $('<li role="presentation"> <a role ="menuitem" " href="#" tabindex="-1">'+li[i].name+'</a></li>');
					element.bind('click', {msg: i}, function(event) {
						bcnGlobal = bcn;
						renderLdWithLi(event.data.msg);
					});
					dropDownMenu.append(element);
				}
				dropClass.append(dropDownMenu);
					
				entry.find(".btn-group").append(showAllButton);
				entry.find(".btn-group").append(dropClass);
				
				$("#bcns").append(entry);
				
				var showAllButtonTooltipOptions = {};
				showAllButtonTooltipOptions.title = "Show all documents";
				showAllButtonTooltipOptions.container = "body";
				showAllButtonTooltipOptions.placement = "top";
				$(".show-ld-btn").tooltip(showAllButtonTooltipOptions);
				
				var liButtonTooltipOptions = {};
				liButtonTooltipOptions.title = "Choose Learning Indicator";
				liButtonTooltipOptions.container = "body";
				liButtonTooltipOptions.placement = "top";
				$(".li-btn").tooltip(liButtonTooltipOptions);
			}
			
			
			function renderLd(i) {
					var ld = ldsList[i];
					
					//Each LD is an entry in the table
					var tableRow=$('<tr></tr>');
					var col = $('<td class="ldFirstCol" style="cursor:pointer;"><span class="caret"></span>&nbsp;<span>' + ld.name + '</span></td>');
					col.click(function() { $(this).parent("tr").next().toggle("normal"); });					
					tableRow.append(col);										
					
					col = $("<td align='center'></td>").append('<span></span>');
					var showLDBtn = $('<button type="button" class="btn btn-default btn-show-ld" title="'+ ld.link +'">Show document</button>');
					showLDBtn.click(function() { window.open( $(this).attr('title') ); });
					col.append(showLDBtn);
					tableRow.append(col);
					
					$("#lds").append(tableRow);
					
					var btnGroup = $('<div class="btn-group"></div');
					
					//show an update Button
					var updateButton = $('<button class="btn btn-default update-ld-btn"><span class="glyphicon glyphicon-edit"></span></button>');
					updateButton.attr("name", "update_ld");
					updateButton.click(function() {
						ldGlobal = i;
						showUpdateModal();
					});
					//show a delete Button
					var deleteButton = $('<button class="btn btn-default delete-ld-btn"><span class="glyphicon glyphicon-trash"></span></button>');
					deleteButton.attr("name", "delete_ld");
					deleteButton.click(function() {
						ldsList.splice(i, 1);
						updateBCNwithLds(ldsList, function() {							
							$(".tooltip").remove();
							renderLds(ldsList);
						});
					});
					
					btnGroup.append(updateButton);
					btnGroup.append(deleteButton);
					tableRow.append($("<td align='center'></td>").append(btnGroup));

					// Every learning documents has one extra hidden row for the description
					var descriptionRow = $('<tr style="display:none;"></tr>');
					LDdescription = $('<td colspan="3"><span style="font-size:small">' + ld.description + '</span></td>');
					descriptionRow.append(LDdescription);
					$("#lds").append(descriptionRow);

					// Add tooltips for buttons in the btn-group
					var ldTooltip1 = {};
					ldTooltip1.title = "View/Edit";
					ldTooltip1.container = "body";
					$(".update-ld-btn").tooltip(ldTooltip1);

					var ldTooltip2 = {};
					ldTooltip2.title = "Delete";
					ldTooltip2.container = "body";
					$(".delete-ld-btn").tooltip(ldTooltip2);

					var ldTooltip3 = {};
					ldTooltip3.title = "Show/Hide description";
					ldTooltip3.container = "body";
					$(".ldFirstCol").tooltip(ldTooltip3);
			}

			function showLdTab() {
				
				ldsList = bcnGlobal.learningDocuments;
				if (ldsList === null) {
					return;
				}
				renderLds(ldsList);
				
				$("#ldTab").removeClass("hidden");
				changeTabs();
			}
			
			function showUpdateModal() {
				$('#inputLdLiLevelDiv').remove();
						
				var div = $('<div id="inputLdLiLevelDiv" class="form-group"></div>');			
				var liLabel = $('<label for="inputLdLiLevel" id="labelLdLiLevel">Learning Indicator:</label>');
				div.append(liLabel);
				
				var select = $('<select id="inputLdLiLevelUpdate" style="border:1px solid #D3D3D3; background-color:#FFFFFF; margin-left:5px;"></select>');
				var liList = bcnGlobal.learningIndicators;
				for(i = 0; i< liList.length; i++) {
					var option = $('<option>'+liList[i].name+'</option>');
					select.append(option);
				}
				div.append(select);
				$("#updateForm").append(div);
				
				var ld = ldsList[ldGlobal];
				$("#inputLdLiLevelUpdate").val(ld.liLevel);	
				
				$("#inputLdNameUpdate").val(ld.name);
				$("#inputLdDescriptionUpdate").val(ld.description);
				$("#inputLdLinkUpdate").val(ld.link);
				
				$("#updateLdModal").modal();
			}
			
			function updateLd() {
				var ld = {
					"name":$("#inputLdNameUpdate").val(),
					"description":$("#inputLdDescriptionUpdate").val(),
					"link": $("#inputLdLinkUpdate").val(),
					"liLevel":$("#inputLdLiLevelUpdate").val()
				}
				var lds = bcnGlobal.learningDocuments;
				lds[ldGlobal] = ld;
			
				updateBCNwithLds(lds, function() {
					$("#lds").empty();
					renderLds(lds);
					$('#updateLdModal').modal("hide");
					$("#updateLdButton").button("reset");
				});
			}
			
			function renderLds(lds) {
				$("#lds").empty();

				for(i=0; i<lds.length; i++) {
					renderLd(i);
				}
			}
			
			
		</script>
			
		<!-- HTML Block -->
		<div class ="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title"><span class="glyphicon glyphicon-folder-open" style="margin-right:5px;"></span> Your Learning Documents</h3>
			</div>
		
			<div class="panel-body">
				<ol class="breadcrumb">
					 <li class="active" id="ovNav">Choose the BCN</li> 
					 <li id="ldNav" class="hidden">Learning Documents</li>
				</ol>


				<div id="ovTab" class="active">
					<table class="table table-striped table-bordered" id="bcns">
						<td>Loading BCNs...</td>
					</table>
				</div>

				<div id="ldTab" class="hidden">
					<div id="tabs-2" class="container">
						<div class="panel-body">
							<button class="btn btn-primary" name="add_ld" onClick="showAddModal();"><span class="glyphicon glyphicon-plus"></span></button>
						</div>
						<div id="ldTable" class="container">
							<table id="lds" class="table table-striped table-bordered">
							</table>
						</div>
					</div>
				</div>
			</div> 
		</div>
	
		
		<div class="modal fade" id="addLdModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">Add a new Learning Document</h4>
  					</div>
  					<div class="modal-body">
    					<form id="addForm" role="form">
								<div class="form-group">
									<label for="inputLdName">Name</label>
									<input type="text" class="form-control" id="inputLdName" placeholder="Enter name">
								</div>
								<div class="form-group">
									<label for="inputLdDescription">Description</label>
									<textarea style="resize:none;" class="form-control" id="inputLdDescription" placeholder="Enter description"></textarea>
								</div>
								<div class="form-group">
									<label for="inputLdLink"">Link</label>
									<input type="text" class="form-control" id="inputLdLink" placeholder="Enter url">
			 					</div>
						</form>
					</div>
  					<div class="modal-footer">
				        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				        <button type="button" data-loading-text="Saving..." id="saveLdButton" class="btn btn-primary">Save</button>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->
		
		<div class="modal fade" id="updateLdModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
  					<div class="modal-header">
    					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    					<h4 class="modal-title" id="myModalLabel">Update a Learning Document</h4>
  					</div>
  					<div class="modal-body">
    					<form id="updateForm" role="form">
								<div class="form-group">
									<label for="inputLdNameUpdate">Name</label>
									<input type="text" class="form-control" id="inputLdNameUpdate" placeholder="Enter name">
								</div>
								<div class="form-group">
									<label for="inputLdDescriptionUpdate">Description</label>
									<textarea style="resize:none;" class="form-control" id="inputLdDescriptionUpdate" placeholder="Enter description"></textarea>
								</div>
								<div class="form-group">
									<label for="inputLdLinkUpdate"">Link</label>
									<input type="text" class="form-control" id="inputLdLinkUpdate" placeholder="Enter url">
			 					</div>
						</form>
					</div>
  					<div class="modal-footer">
				        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				        <button type="button" data-loading-text="Saving..." id="updateLdButton" class="btn btn-primary">Save</button>
  					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal-dialog -->
		</div><!-- /.modal -->
		
		
	]]>
  </Content>
</Module>
